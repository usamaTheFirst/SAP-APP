@page "/leave"
@using SAPConnection.Data
@inject LeaveService leaveService
@inject NavigationManager NavigationManager


@inject IToastService toastService
@inject AuthenticationStateProvider AuthNStateProvider
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore;
@using Microsoft.Extensions.Options;
@using SAPConnection.Areas.Identity.Data;
@using SAPConnection.Data;
@using SAPConnection.Migrations;
@inject IHttpContextAccessor httpContextAccessor

@inject UserManager<ApplicationUser> userManager
@inject IHttpContextAccessor httpContextAccessor
@inject Microsoft.EntityFrameworkCore.DbContextOptions<SAPConnectionContext> dbContextOptions





<center><h1 style="font-family:Georgia; font-size:x-large;">Leave Application Form</h1></center>
<form>
    <table cellpadding="14" width=100%>
        <tr style="background-color: #000080; color: white; font-weight:500; font-size:larger">
            <td colspan="4">
                <label>Employee Details</label>
            </td>
        </tr>
        <tr width=100%>
            <td width=20%>
                <label>Request Date : </label>
            </td>
            <td width=30%>
                <InputDate @bind-Value="@date"  />
            </td>
            <td width=20%>
                <label> Status : </label>
            </td>
            <td width=30%>
                <input type="text" readonly value="Draft" size="35" />
            </td>
        </tr>
        <tr>
            <td>
                <label>Employee Name : </label>
            </td>
            <td>
                <input type="text" readonly value="@Name" size="35" />
            </td>
            <td>
                <label>Employee Number : </label>
            </td>
            <td>
                <input type="text" readonly value="@Pno" size="35" />
            </td>
        </tr>
        <tr>
            <td>
                <label>Department : </label>
            </td>
            <td>
                <input type="text" readonly value="@Department" size="35" />
            </td>
            <td>
                <label>Designation : </label>
            </td>
            <td>
                <input type="text" readonly value="@Designation" size="35" />
            </td>
        </tr>
        <tr style="background-color: #000080; color: white; font-weight:500; font-size:larger">
            <td colspan="4">
                <label>Leave Details</label>
            </td>
        </tr>
        <tr>
            <td>
                <label>Leave From : </label>
            </td>
            <td>
                <input type="date" size="35" @bind-value="newLeave.FromDate" />
            </td>
            <td>
                <label>Leave To : </label>
            </td>
            <td>
                <input type="date" size="35" @bind-value="newLeave.ToDate" />
            </td>
        </tr>
        <tr>
            <td>
                <label>Leave Type : </label>
            </td>
            <td>
                <select @onclick="@fetchleaveBln"  style="width:100%;" @bind="newLeave.LeaveType">
                    <option >Casual</option>
                    <option >Sick</option>
                    <option >Annual</option>
                </select>
            </td>
            <td>
                <label>Leave Balance : </label>
            </td>
            <td>
                <input value="@leaveBln" type="text" readonly size="35" />
            </td>
        </tr>
       
        <tr>
            <td>
                <label>Reason For Leave : </label>
            </td>
            <td colspan="3">
                <textarea style="width:100%" @bind="newLeave.Reason" required></textarea>
            </td>
        </tr>
        <tr>
            <td>
                <label>Attachments</label>
            </td>
            <td colspan="3">
                @*<input name = "attachment" type="file" multiple/>*@
            </td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td>


                <input style="background-color:#000080; color:white; font-size:large; border-radius:5px; width:50%; float:right;" @onclick="submitLeaves" type="submit" @onclick:preventDefault />
            </td>
        </tr>
    </table>

    <div>
        <div style="width:10px;">
            <div onclick="show()"
                 style="border:1px solid black;
                    float:left;
                    font-size:large;
                    width: 0;
	                height: 0;
	                border-top: 8px solid transparent;
	                border-left: 16px solid #555;
	                border-bottom: 8px solid transparent;
                ">
            </div>
        </div>
        <div colspan="4" style="margin-left:30px;">
            <button @onclick="@Show"><b id="approve_route" style="cursor:pointer;">Approval Route</b></button>
        </div>
    </div>
    <br />
    <table style="width:100%;" hidden="@IsShow">
        <tr>
            <td colspan="4">
                <div id="route_details" style="width:100%">

                    <table style="width:100%; text-align:center;">
                        <tr>
                            <td colspan="5" style="background-color:#000080; color:white; text-align:center;">
                                Approval Route Detail
                            </td>
                        </tr>
                        <tr style="border:1px solid black;">
                            <th style="border:1px solid black;">
                                <label>Level</label>
                            </th>
                            <th style="border:1px solid black;">
                                <label>Task</label>
                            </th>
                            <th colspan="3" style="border:1px solid black; text-align:right; padding-right: 150px;">
                                <label>Approver</label>
                            </th>
                        </tr>
                        <tr style="border:1px solid black;">
                            <th style="border:1px solid black;">
                                <label>1.</label>
                            </th>
                            <td style="border:1px solid black;">
                                <label>Review</label>
                            </td>
                            <td colspan="3" style="border:1px solid black; text-align:right; padding-right: 100px;">
                                <label>naeem iqbal/it/ho/ffbl</label>
                            </td>
                        </tr>
                        <tr style="border:1px solid black;">
                            <th style="border:1px solid black;">
                                <label>2.</label>
                            </th>
                            <td style="border:1px solid black;">
                                <label>Approve</label>
                            </td>
                            <td colspan="3" style="border:1px solid black; text-align:right; padding-right: 100px;">
                                <label>sajid malik/it/ho/ffbl</label>
                            </td>
                        </tr>
                    </table>
                </div>
            </td>
        </tr>
    </table>
    <br />
</form>

@code {
    private static bool IsShow { get; set; } = true;

    string Name;
    string Designation;
    string Department;
    string Pno;
    string Date;
    int leaveBln;
    DateTime date = DateTime.Now.Date;

    LeaveModel newLeave = new LeaveModel();

    private async Task submitLeaves()
    {


        await leaveService.CreateLeaveAsync(newLeave);
        NavigationManager.NavigateTo("all-leaves");


    }


    private void Show()
    {
        IsShow = !IsShow;
    }



    protected override async Task OnInitializedAsync()
    {




        try
        {
            var user = await userManager.GetUserAsync(httpContextAccessor.HttpContext.User);

            using var context = new SAPConnectionContext(dbContextOptions);

            var pno = await context.Users
                .Where(u => u.Id == user.Id)
                .Select(u => u.Pno)
                .FirstOrDefaultAsync();
            Pno = pno.ToString();
            string connectionString = "AppServerHost=10.1.25.168; SystemNumber=00; User=abapdev; Password=Ffbl@786#; Client=300; Language=EN; PoolSize=5; Trace=8";

            using var connection = new SapNwRfc.SapConnection(connectionString);

            connection.Connect();
            var someFunction = connection.CreateFunction("ZBAPI_EMP_PRSNL_DETAILS");
            var result = someFunction.Invoke<SAPRFCResult>(new SAPInputParameter
                {
                    Pno = Pno,
                });

            //connection.Disconnect();
            //connection.Dispose();


            string DevconnectionString = "AppServerHost=sapdev.ffbl.com; SystemNumber=00; User=abapdev; Password=Pakistan@786#; Client=110; Language=EN; PoolSize=5; Trace=8";

            using var DevConnection = new SapNwRfc.SapConnection(DevconnectionString);

            DevConnection.Connect();
            var LeaveBalanceFunction = DevConnection.CreateFunction("ZST_LEAVE_BALN3");
            var LeaveBalanceResult = LeaveBalanceFunction.Invoke<LeaveBalanceReturnParameter>(new LeaveBalanceInputParameter
                {
                    Pno = Pno,
                    FromDate = "20210430",
                    ToDate = "20210430",
                    LeaveType = "4000"

                });



            Name = result.Items[0].Name.ToString();
            Designation = result.Items[0].Designation.ToString();
            Department = result.Items[0].Department.ToString();
            Pno = result.Items[0].Pno.ToString();
            Date = DateTime.Now.Date.ToString();
            leaveBln = Convert.ToInt32(float.Parse(LeaveBalanceResult.Bal.ToString()));

            //Name = "Usama Fayyaz";
            //Designation = "Management Associates";
            //Department = "ICT";
            //Pno = "30000624";
            //Date = DateTime.Now.Date.ToString();

        }
        catch (Exception e)
        {
            toastService.ShowError("We Ran into some error. Try logging in again");

        }





    }




    private async Task fetchleaveBln( )
    {
       
        int temp = (Int32) newLeave.LeaveType;
        //toastService.ShowError(temp.ToString());



       try
        {
           
            
                string DevconnectionString = "AppServerHost=sapdev.ffbl.com; SystemNumber=00; User=abapdev; Password=Pakistan@786#; Client=110; Language=EN; PoolSize=5; Trace=8";

                using var DevConnection = new SapNwRfc.SapConnection(DevconnectionString);

                DevConnection.Connect();
                var LeaveBalanceFunction = DevConnection.CreateFunction("ZST_LEAVE_BALN3");
                var LeaveBalanceResult = LeaveBalanceFunction.Invoke<LeaveBalanceReturnParameter>(new LeaveBalanceInputParameter
                    {
                        Pno = Pno,
                    FromDate = newLeave.FromDate.Date.ToString("yyyyMMdd"),
                    ToDate = newLeave.ToDate.Date.ToString("yyyyMMdd"),
                        LeaveType = temp.ToString()

                    });
                leaveBln = Convert.ToInt32(float.Parse(LeaveBalanceResult.Bal.ToString()));


                
            
        }
        catch(Exception e)
        {
            toastService.ShowError("We Ran into some error. Try logging in again");

        }
    }

}
